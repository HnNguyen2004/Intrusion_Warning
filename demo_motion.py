"""
Demo script ƒë·ªÉ hi·ªÉu r√µ c√°ch ph√°t hi·ªán chuy·ªÉn ƒë·ªông
C√≥ ch√∫ th√≠ch ti·∫øng Vi·ªát chi ti·∫øt t·ª´ng b∆∞·ªõc
"""

import cv2
import numpy as np
from datetime import datetime
from config import CAMERA_INDEX, MOTION_THRESHOLD, CONTOUR_MIN_AREA

def demo_motion_detection():
    print("üéØ DEMO: Hi·ªÉu c√°ch ph√°t hi·ªán chuy·ªÉn ƒë·ªông")
    print("=" * 60)
    print("üìù H∆∞·ªõng d·∫´n:")
    print("- Tr·∫°ng th√°i 'MONITORING': Kh√¥ng c√≥ chuy·ªÉn ƒë·ªông")
    print("- Tr·∫°ng th√°i 'MOTION DETECTED': C√≥ chuy·ªÉn ƒë·ªông")
    print("- H·ªôp xanh l√°: V√πng chuy·ªÉn ƒë·ªông")
    print("- Di·ªán t√≠ch hi·ªÉn th·ªã ·ªü g√≥c tr√°i")
    print("- Ng∆∞·ª°ng c·∫£nh b√°o:", MOTION_THRESHOLD, "pixels")
    print("=" * 60)
    print("üéÆ Ph√≠m t·∫Øt:")
    print("- 'q': Tho√°t")
    print("- 'r': Reset background")
    print("- 's': Gi·∫£m ng∆∞·ª°ng (d·ªÖ k√≠ch ho·∫°t h∆°n)")
    print("- 'h': TƒÉng ng∆∞·ª°ng (kh√≥ k√≠ch ho·∫°t h∆°n)")
    print("=" * 60)
    
    # B∆∞·ªõc 1: M·ªü camera (k·∫øt n·ªëi v·ªõi webcam)
    cap = cv2.VideoCapture(CAMERA_INDEX)
    if not cap.isOpened():
        print("‚ùå Kh√¥ng th·ªÉ m·ªü camera")
        return
    
    # Bi·∫øn l∆∞u tr·ªØ ·∫£nh n·ªÅn v√† c√°c th√¥ng s·ªë
    background = None  # ·∫¢nh n·ªÅn ƒë·ªÉ so s√°nh
    motion_threshold = MOTION_THRESHOLD  # Ng∆∞·ª°ng k√≠ch ho·∫°t c·∫£nh b√°o
    alert_count = 0  # ƒê·∫øm s·ªë l·∫ßn c·∫£nh b√°o
    
    print("üü¢ B·∫Øt ƒë·∫ßu demo... Di chuy·ªÉn tr∆∞·ªõc camera ƒë·ªÉ test!")
    
    while True:
        # B∆∞·ªõc 2: ƒê·ªçc frame (khung h√¨nh) t·ª´ camera
        ret, frame = cap.read()
        if not ret:
            break
        
        # B∆∞·ªõc 3: X·ª≠ l√Ω ·∫£nh ƒë·ªÉ ph√°t hi·ªán chuy·ªÉn ƒë·ªông
        # Chuy·ªÉn ƒë·ªïi sang ·∫£nh x√°m (grayscale) ƒë·ªÉ d·ªÖ x·ª≠ l√Ω
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        
        # L√†m m·ªù ·∫£nh ƒë·ªÉ gi·∫£m nhi·ªÖu (noise)
        gray = cv2.GaussianBlur(gray, (21, 21), 0)
          # B∆∞·ªõc 4: Kh·ªüi t·∫°o ·∫£nh n·ªÅn (background) l·∫ßn ƒë·∫ßu
        if background is None:
            background = gray  # L∆∞u frame ƒë·∫ßu ti√™n l√†m n·ªÅn
            print("üéØ Dang hoc anh nen moi... Vui long dung yen!")
            continue
        
        # B∆∞·ªõc 5: T√≠nh to√°n s·ª± kh√°c bi·ªát gi·ªØa frame hi·ªán t·∫°i v√† n·ªÅn
        # T√¨m v√πng c√≥ s·ª± thay ƒë·ªïi (chuy·ªÉn ƒë·ªông)
        frame_delta = cv2.absdiff(background, gray)
        
        # Chuy·ªÉn ƒë·ªïi th√†nh ·∫£nh nh·ªã ph√¢n (ƒëen tr·∫Øng)
        # Pixel > 30 = tr·∫Øng (c√≥ chuy·ªÉn ƒë·ªông), < 30 = ƒëen (kh√¥ng ƒë·ªïi)
        thresh = cv2.threshold(frame_delta, 30, 255, cv2.THRESH_BINARY)[1]
        
        # L√†m d√†y c√°c v√πng tr·∫Øng ƒë·ªÉ d·ªÖ ph√°t hi·ªán
        thresh = cv2.dilate(thresh, None, iterations=2)
        
        # B∆∞·ªõc 6: T√¨m c√°c v√πng chuy·ªÉn ƒë·ªông (contours)
        contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        
        # Kh·ªüi t·∫°o bi·∫øn ƒë·ªÉ t√≠nh to√°n
        total_motion_area = 0  # T·ªïng di·ªán t√≠ch chuy·ªÉn ƒë·ªông
        motion_detected = False  # C√≥ ph√°t hi·ªán chuy·ªÉn ƒë·ªông kh√¥ng?
        contour_count = 0  # S·ªë l∆∞·ª£ng v√πng chuy·ªÉn ƒë·ªông
        
        # B∆∞·ªõc 7: V·∫Ω h·ªôp xanh l√° cho t·ª´ng v√πng chuy·ªÉn ƒë·ªông
        for contour in contours:
            # T√≠nh di·ªán t√≠ch c·ªßa v√πng chuy·ªÉn ƒë·ªông
            area = cv2.contourArea(contour)
            
            # B·ªè qua c√°c v√πng qu√° nh·ªè (c√≥ th·ªÉ l√† nhi·ªÖu)
            if area < CONTOUR_MIN_AREA:
                continue
                
            contour_count += 1
            total_motion_area += area
            
            # T√¨m h√¨nh ch·ªØ nh·∫≠t bao quanh v√πng chuy·ªÉn ƒë·ªông
            (x, y, w, h) = cv2.boundingRect(contour)
            
            # V·∫Ω h·ªôp m√†u xanh l√° quanh v√πng chuy·ªÉn ƒë·ªông
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
              # Hi·ªÉn th·ªã di·ªán t√≠ch c·ªßa t·ª´ng v√πng b√™n trong h·ªôp
            cv2.putText(frame, f"Dien tich: {int(area)}", 
                       (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)
          # B∆∞·ªõc 8: Ki·ªÉm tra c√≥ k√≠ch ho·∫°t c·∫£nh b√°o kh√¥ng
        if total_motion_area > motion_threshold:
            motion_detected = True
            alert_count += 1
            print(f"üö® CANH BAO #{alert_count}: Dien tich chuyen dong = {total_motion_area:.1f} > {motion_threshold}")        # B∆∞·ªõc 9: Hi·ªÉn th·ªã th√¥ng tin tr√™n m√†n h√¨nh
        # Hi·ªÉn th·ªã tr·∫°ng th√°i (ƒêANG GI√ÅM S√ÅT ho·∫∑c PH√ÅT HI·ªÜN CHUY·ªÇN ƒê·ªòNG)
        if background is None:
            status_text = "DANG HOC ANH NEN..."
            status_color = (0, 255, 255)  # M√†u v√†ng
        else:
            status_text = "PHAT HIEN CHUYEN DONG" if motion_detected else "DANG GIAM SAT"
            status_color = (0, 0, 255) if motion_detected else (0, 255, 0)  # ƒê·ªè ho·∫∑c xanh l√°
        
        cv2.putText(frame, f"Trang thai: {status_text}", 
                   (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.7, status_color, 2)
        
        # Hi·ªÉn th·ªã t·ªïng di·ªán t√≠ch chuy·ªÉn ƒë·ªông hi·ªán t·∫°i
        cv2.putText(frame, f"Dien tich chuyen dong: {total_motion_area:.1f}", 
                   (10, 60), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
        
        # Hi·ªÉn th·ªã ng∆∞·ª°ng c·∫£nh b√°o
        cv2.putText(frame, f"Nguong canh bao: {motion_threshold}", 
                   (10, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
        
        # Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng v√πng chuy·ªÉn ƒë·ªông
        cv2.putText(frame, f"So vung chuyen dong: {contour_count}", 
                   (10, 120), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 255), 2)
        
        # Hi·ªÉn th·ªã s·ªë l·∫ßn ƒë√£ c·∫£nh b√°o
        cv2.putText(frame, f"So lan canh bao: {alert_count}", 
                   (10, 150), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 255, 0), 2)
        
        # Hi·ªÉn th·ªã th·ªùi gian hi·ªán t·∫°i
        timestamp = datetime.now().strftime("%H:%M:%S")
        cv2.putText(frame, timestamp, 
                   (10, frame.shape[0] - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 1)
          # Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ph√≠m
        cv2.putText(frame, "Nhan 'q':Thoat 'r':Reset 's':Giam nguong 'h':Tang nguong", 
                   (10, frame.shape[0] - 30), cv2.FONT_HERSHEY_SIMPLEX, 0.4, (200, 200, 200), 1)
        
        # Hi·ªÉn th·ªã c·ª≠a s·ªï video
        cv2.imshow('Demo Phat Hien Chuyen Dong - He Thong Canh Bao Xam Nhap', frame)
        
        # B∆∞·ªõc 10: C·∫≠p nh·∫≠t ·∫£nh n·ªÅn t·ª´ t·ª´ (h·ªçc m√¥i tr∆∞·ªùng m·ªõi)
        # Tr·ªôn 95% ·∫£nh n·ªÅn c≈© + 5% ·∫£nh hi·ªán t·∫°i
        background = cv2.addWeighted(background, 0.95, gray, 0.05, 0)
        
        # B∆∞·ªõc 11: X·ª≠ l√Ω ph√≠m b·∫•m t·ª´ ng∆∞·ªùi d√πng
        key = cv2.waitKey(1) & 0xFF
        if key == ord('q'):
            break  # Tho√°t ch∆∞∆°ng tr√¨nh        elif key == ord('r'):
            background = None  # Reset ·∫£nh n·ªÅn
            print("üîÑ Da reset anh nen - He thong se hoc lai moi truong moi!")
            print("   üëâ Dung yen 3-5 giay de he thong hoc anh nen moi")
        elif key == ord('s'):
            motion_threshold = max(1000, motion_threshold - 1000)  # Gi·∫£m ng∆∞·ª°ng
            print(f"‚¨áÔ∏è  Nguong giam xuong: {motion_threshold}")
        elif key == ord('h'):
            motion_threshold += 1000  # TƒÉng ng∆∞·ª°ng
            print(f"‚¨ÜÔ∏è  Nguong tang len: {motion_threshold}")
      # B∆∞·ªõc 12: D·ªçn d·∫πp khi k·∫øt th√∫c
    cap.release()  # ƒê√≥ng camera
    cv2.destroyAllWindows()  # ƒê√≥ng c·ª≠a s·ªï
    
    print(f"\nüìä KET QUA DEMO:")
    print(f"- Tong so canh bao: {alert_count}")
    print(f"- Nguong cuoi cung: {motion_threshold}")
    print("‚úÖ Demo hoan thanh!")

if __name__ == "__main__":
    demo_motion_detection()
